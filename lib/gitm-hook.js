#!/usr/bin/env node
"use strict";const{program:e}=require("commander"),s=require("shelljs"),{options:o,args:i}=require("./conf/hook"),{error:r,success:n,getCurrent:t,getBranchsFromID:c,isGitProject:l}=require("./js/index"),{createArgs:g}=require("./js/tools"),u=require("./js/branch/getIsMergedDevBranch"),a=require("./js/branch/getIsUpdatedInTime"),p=require("./js/branch/getIsMergeAction"),d=require("./js/branch/getBehindLogs"),{init:f,remove:h}=require("./js/hook/index");l()||(s.echo(r("当前目录不是git项目目录")),s.exit(1));const m=require("./js/getConfig")();e.name("gitm hook").usage("[command]").description("git hook钩子"),i.length>0&&e.arguments(g(i)),o.forEach((s=>{e.option(s.flags,s.description,s.defaultValue)})),e.action((async(e,o,i)=>{if(console.log("gitmars hooks is running"),i.noVerify)s.exit(0);else{if("init"===e)f();else if("remove"===e)h();else{const e=i.type?i.type.split(","):[],o=[m.master,m.develop,m.release,m.support,m.bugfix],l=t();if(console.log(e,process.env,process.argv,c("2080d17e")),l!==m.develop&&o.includes(l)&&e.includes("1")){const[e,o]=process.env.GIT_REFLOG_ACTION?process.env.GIT_REFLOG_ACTION.split(" "):[];if("merge"===e){u(o,m.develop)?console.info(n(o+"合并过"+m.develop)):(console.info(r("检测到你的分支没有合并过"+m.develop)),s.exit(0))}}if(o.includes(l)&&e.includes("2")){const[e,o]=process.env.GIT_REFLOG_ACTION?process.env.GIT_REFLOG_ACTION.split(" "):[],t=o.split("/")[0];if("merge"===e){a({lastet:i.lastet,branch:o})?console.info(n(o+"一周内同步过主干分支代码")):(console.info(r("检测到你1周内没有同步过主干"+t+"分支代码")),s.exit(0))}}if(o.includes(l)&&e.includes("3")){p()?console.info(n("最后一条记录是merge记录")):(console.info(r("检测到你直接在主干分支修改代码")),s.exit(0))}if(o.includes(l)&&e.includes("4")){d().length?console.info(n("本地版本没有落后远程，可直接push")):(console.info("你本地分支版本落后于远程分支，请先执行pull"),s.exit(0))}}s.exit(0)}})),e.parse(process.argv);

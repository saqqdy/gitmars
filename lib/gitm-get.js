#!/usr/bin/env node
"use strict";const{program:e}=require("commander"),t=require("shelljs"),{options:s,args:r}=require("./conf/get"),{error:i,queue:a,getCurrent:g,getStashList:o,warning:n,isGitProject:c}=require("./js/index"),{createArgs:h}=require("./js/tools");c()||(t.echo(i("当前目录不是git项目目录")),t.exit(1)),e.name("gitm get").usage("[message] [index]").description("恢复暂存区文件"),r.length>0&&e.arguments(h(r)),s.forEach((t=>{e.option(t.flags,t.description,t.defaultValue)})),e.action((async(e,s,r)=>{e||(e=g());const i=await o(e);0===i.length&&(t.echo(n("该分支没有暂存任何文件！")),t.exit(0)),void 0===s&&i.length>1&&t.echo(n(`该分支下有${i.length}条暂存记录，默认恢复最近的一条记录`)),i.length>2&&t.echo(n(`该分支下有${i.length}条暂存记录，建议定期清理不必要的暂存记录！`)),a([{cmd:`git stash ${r.keep?"apply":"pop"} ${i[s||0].key}`,config:{again:!r.keep&&`git stash drop ${i[s||0].key}`,success:"文件恢复成功",fail:"恢复失败，请检查冲突"}},"git reset -q HEAD -- ."])})),e.parse(process.argv);

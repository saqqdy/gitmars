#!/usr/bin/env node
"use strict";const{program:e}=require("commander"),t=require("shelljs"),{options:r,args:s}=require("./conf/get"),{error:i,queue:n,getCurrent:o,getStashList:a,warning:g,isGitProject:c}=require("./js/index"),{createArgs:l}=require("./js/tools");c()||(t.echo(i("当前目录不是git项目目录")),t.exit(1)),e.name("gitm get").usage("[message] [index]").description("恢复暂存区文件"),s.length>0&&e.arguments(l(s)),r.forEach((t=>{e.option(t.flags,t.description,t.defaultValue)})),e.action(((e,r,s)=>{return i=void 0,c=null,l=function*(){e||(e=o());const i=yield a(e);0===i.length&&(t.echo(g("该分支没有暂存任何文件！")),t.exit(0)),void 0===r&&i.length>1&&t.echo(g(`该分支下有${i.length}条暂存记录，默认恢复最近的一条记录`)),i.length>2&&t.echo(g(`该分支下有${i.length}条暂存记录，建议定期清理不必要的暂存记录！`)),n([{cmd:`git stash ${s.keep?"apply":"pop"} ${i[r||0].key}`,config:{again:!s.keep&&`git stash drop ${i[r||0].key}`,success:"文件恢复成功",fail:"恢复失败，请检查冲突"}},"git reset -q HEAD -- ."])},new Promise(((e,t)=>{var r=e=>{try{n(l.next(e))}catch(e){t(e)}},s=e=>{try{n(l.throw(e))}catch(e){t(e)}},n=t=>t.done?e(t.value):Promise.resolve(t.value).then(r,s);n((l=l.apply(i,c)).next())}));var i,c,l})),e.parse(process.argv);

"use strict";const e=require("fs"),o=require("path"),i=require("shelljs"),{warning:n,compareVersion:r}=require("../index"),{hookList:s}=require("../global"),t=require("../gitRevParse"),c=require("../getGitVersion"),l=require("./getHookComment"),u=require("./getHookType"),a=require("./getHookShell"),m=require("./getLocalShell"),S=require("ci-info"),f=require("../getConfig"),{gitHookDir:h,prefix:g}=t(),k=c(),y=f();function d(i=h){const n=(o,i)=>{e.writeFileSync(o,i,"utf-8"),e.chmodSync(o,493)};s.map((e=>o.join(i,e))).forEach((i=>{const r=`#!/bin/sh\n# gitmars\n\n${l()}\n\n. "$(dirname "$0")/gitmars.sh"`,s=o.basename(i);if(e.existsSync(i)){const o=e.readFileSync(i,"utf-8");return u.isGhooks(o)?(console.info(`合并已存在的ghooks钩子: ${s}`),n(i,r)):u.isPreCommit(o)?(console.info(`合并已存在的pre-commit钩子: ${s}`),n(i,r)):u.isGitmars(o)||u.isHusky(o)||u.isYorkie(o)?n(i,r):void console.info(`跳过已存在的用户git钩子: ${s}`)}n(i,r)}))}function q(i=h){s.map((e=>o.join(i,e))).filter((o=>{if(e.existsSync(o)){const i=e.readFileSync(o,"utf-8");return u.isGitmars(i)}return!1})).forEach((o=>{e.unlinkSync(o)}))}function p(i=h){const n=o.join(i,"gitmars.sh");e.writeFileSync(n,a(),"utf-8"),e.chmodSync(n,493)}function H(i=h){const n=o.join(i,"gitmars.sh");e.existsSync(n)&&e.unlinkSync(n)}function x(i=h,n,r){const s=o.join(i,"gitmars.local.sh");e.writeFileSync(s,m(n,r),"utf-8"),e.chmodSync(s,493)}function v(i=h){const n=o.join(i,"gitmars.local.sh");e.existsSync(n)&&e.unlinkSync(n)}module.exports={init:function(){const o=k&&r(k,"2.13.0");S.isCI&&y.skipCI?console.info("持续集成环境，跳过钩子安装"):(e.existsSync(h)||e.mkdirSync(h),["1","true"].includes(process.env.GITMARS_SKIP_HOOKS||"")&&(i.echo(n("已存在环境变量GITMARS_SKIP_HOOKS，跳过安装")),process.exit(0)),o||(i.echo(n("Gitmars需要使用2.13.0以上版本的Git，当前版本："+k)),process.exit(0)),d(h),p(h),x(h,"yarn",g),console.info("gitmars hooks init down"))},remove:function(){q(),H(),v(),console.info("gitmars hooks removed")},createHooks:d,removeHooks:q,createHookShell:p,removeHookShell:H,createLocalShell:x,removeLocalShell:v};

"use strict";const{spawnSync:e}=require("child_process"),s=require("../checkGitDirEnv"),o=require("../getConfig")();function n([,,s="",...n],{cwd:t=process.cwd()}={}){const r=function(e,s){return o&&o.hooks&&o.hooks[s]}(0,s),c={};return(null==n?void 0:n.length)&&(c.GITMARS_GIT_PARAMS=n.join(" ")),r?function(s,o,n,t){console.info(`gitmars > ${o} (node ${process.version})`);const{status:r}=e("sh",["-c",n],{cwd:s,env:Object.assign(Object.assign({},process.env),t),stdio:"inherit"});if(0!==r){const e=["commit-msg","pre-commit","pre-rebase","pre-push"].includes(o)?"(add --no-verify to bypass)":"(cannot be bypassed with --no-verify due to Git specs)";console.info(`gitmars > ${o} hook failed ${e}`)}return 127===r?1:r||0}(t,s,r,c):0}module.exports=function(){return e=this,o=null,t=function*(){s();try{const e=yield n(process.argv);process.exit(e)}catch(e){console.info("Gitmars > 未知错误！请联系吴峰",e),process.exit(1)}},new Promise(((s,n)=>{var r=e=>{try{i(t.next(e))}catch(e){n(e)}},c=e=>{try{i(t.throw(e))}catch(e){n(e)}},i=e=>e.done?s(e.value):Promise.resolve(e.value).then(r,c);i((t=t.apply(e,o)).next())}));var e,o,t};

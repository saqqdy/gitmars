#!/usr/bin/env node
"use strict";const{program:e}=require("commander"),r=require("inquirer"),s=require("shelljs"),{options:c,args:o}=require("./conf/undo"),{error:t,warning:a,queue:i,isGitProject:n}=require("./js/index"),{createArgs:m}=require("./js/tools");n()||(s.echo(t("当前目录不是git项目目录")),s.exit(1)),e.name("gitm undo").usage("[commitid...] [-b --branch [branch]] [-m --mode [mode]]").description("撤销一次提交记录"),o.length>0&&e.arguments(m(o)),c.forEach((r=>{e.option(r.flags,r.description,r.defaultValue)})),e.action((async(e,c)=>{const o=[];let t="";if(c.mode&&(t=" -m "+Math.abs(Number(c.mode))),c.branch){const e=["%H","%aI","%an"],a=s.exec(`git log --merges --grep="'${c.branch}'" --date-order --pretty=format:"${e.join(",=")}-end-"`,{silent:!0}).stdout.replace(/[\r\n]+/g,"").replace(/-end-$/,""),i=[];let n=i.map((e=>e["%H"]));if(a&&a.split("-end-").forEach((r=>{const s=r.split(",="),c={};e.forEach(((e,r)=>{c[e]=s[r]})),i.push(c)})),i.reverse(),i.length>1){const e={type:"checkbox",message:"检测到存在多条记录，请选择要撤销的项",name:"commitIDs",choices:[]};i.forEach((r=>{e.choices.push({name:`${r["%an"]}操作于：${r["%aI"]}`,value:r["%H"],checked:!0})}));const{commitIDs:s}=await r.prompt(e);n=s}n.forEach((e=>{o.push({cmd:`git revert ${e}${t}`,config:{again:!0,success:"撤销成功",fail:"出错了，请根据提示处理"}})}))}else e?o.push({cmd:`git revert ${e}${t}`,config:{again:!0,success:"撤销成功",fail:"出错了，请根据提示处理"}}):(s.echo(a("指令不合法")),s.exit(1));i(o)})),e.parse(process.argv);
